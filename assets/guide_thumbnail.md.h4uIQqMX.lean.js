import{_ as i}from"./chunks/t1.D91W1I_Q.js";import{_ as a,c as e,a2 as t,o as n}from"./chunks/framework.etYTtafL.js";const m=JSON.parse('{"title":"Video Thumbnail","description":"","frontmatter":{},"headers":[],"relativePath":"guide/thumbnail.md","filePath":"en/guide/thumbnail.md","lastUpdated":1727107399000}'),l={name:"guide/thumbnail.md"};function h(p,s,o,d,r,c){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="thumbnail" tabindex="-1">Video Thumbnail <a class="header-anchor" href="#thumbnail" aria-label="Permalink to &quot;Video Thumbnail {#thumbnail}&quot;">​</a></h1><p>Most mainstream video platforms now support a feature that displays a thumbnail of the video content when the cursor hovers over a specific position on the video progress bar. This helps users quickly locate the desired content. QierPlayer also supports this configuration.</p><p>Thumbnails in QierPlayer are configured using the <code>thumbnail</code> parameter, structured as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IThumbnail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  startSecond</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  gapSecond</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  col</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  images</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>The default values are as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultOpts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IThumbnail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  startSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gapSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  col: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  row: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  images: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Next, we will explain how to understand the above configuration and apply it in practice.</p><h2 id="principle" tabindex="-1">Principle <a class="header-anchor" href="#principle" aria-label="Permalink to &quot;Principle {#principle}&quot;">​</a></h2><p>In frontend image performance optimization, we often use <strong>sprites</strong> to combine multiple images, reducing the number of HTTP requests. The thumbnails for our videos effectively extract many frames from the video and combine them into sprite images.</p><p>The position of the displayed image is calculated based on the cursor&#39;s position in time (using CSS background positioning), and the above configuration provides information about the positions and dimensions of the individual frame images.</p><p>Let&#39;s take a look at the image below:</p><img src="`+i+`"><p>We can see that this sprite is composed of <code>5 x 4</code> small thumbnails; a video may have multiple sprite images.</p><table tabindex="0"><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td>startSecond</td><td>The starting time for thumbnail creation; for example, if the thumbnail starts at <code>0</code> seconds, this will be <code>0</code>.</td></tr><tr><td>gapSecond</td><td>The time span for each small thumbnail; if one is captured every <code>1</code> second, this will be <code>1</code>.</td></tr><tr><td>col</td><td>The number of columns in the sprite.</td></tr><tr><td>row</td><td>The number of rows in the sprite.</td></tr><tr><td>width</td><td>The width of each small thumbnail.</td></tr><tr><td>height</td><td>The height of each small thumbnail.</td></tr><tr><td>images</td><td>An array of URLs for the sprite images.</td></tr></tbody></table><h2 id="make-thumbnails" tabindex="-1">Creating Thumbnails <a class="header-anchor" href="#make-thumbnails" aria-label="Permalink to &quot;Creating Thumbnails {#make-thumbnails}&quot;">​</a></h2><p>Generally, after a user uploads a video to the server, the thumbnail generation is handled server-side. For Java, you can use <a href="https://www.ffmpeg.org/" target="_blank" rel="noreferrer">FFmpeg</a> or <a href="https://github.com/bytedeco/javacv" target="_blank" rel="noreferrer">JavaCV</a>; for Node, you can use <a href="https://github.com/fluent-ffmpeg/node-fluent-ffmpeg" target="_blank" rel="noreferrer">Fluent ffmpeg</a>.</p><p>To make things easier, we will introduce how to use FFmpeg via the command line to create video thumbnails.</p><div class="tip custom-block"><p class="custom-block-title">Powerful Audio and Video Processing Tool</p><p>FFmpeg is an open-source, cross-platform audio and video processing tool that can be used for recording, converting, editing, and more. It supports nearly all common audio and video formats and can perform a variety of operations, including encoding, decoding, packaging, unpackaging, cutting, merging, compressing, transcoding, and extracting audio.</p><p>In short, FFmpeg is a rich-featured, powerful, and flexible tool for audio and video processing, and many players use it as their core.</p></div><p>First, go to the <a href="https://www.ffmpeg.org/download.html" target="_blank" rel="noreferrer">FFmpeg official website</a> to download and install it, making sure to select the right version for your system (for example, if you are using macOS, select macOS). Once downloaded, you will have a command-line tool (you can also quickly install it via <code>brew install ffmpeg</code>). Open the tool.</p><p>Then, execute the following command in the terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./test-video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fps=1/1:round=zero:start_time=0,scale=160x90,tile=5x4&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t%d.jpg</span></span></code></pre></div><p>This command generates a <code>5 x 4</code> sprite image with small thumbnails sized at <code>160 x 90</code>. The sprite file is named <code>t1.jpg</code>.</p><div class="warning custom-block"><p class="custom-block-title">Note</p><p>The demo video is only <code>17</code> seconds long. If a sprite is generated every <code>1</code> second, and the sprite specification is <code>5</code> columns and <code>4</code> rows, only one <code>t1.jpg</code> will be created. If the video is long enough, multiple sprites will be generated: <code>t1.jpg</code>, <code>t2.jpg</code>, <code>t3.jpg</code>, <code>t4.jpg...</code></p></div><p>Explanation of the command parameters:</p><ul><li><code>-i</code> specifies the video file.</li><li><code>-vf</code> is followed by the filter; multiple filters are separated by <code>,</code>, and multiple parameters for a filter are separated by <code>:</code>.</li><li><code>fps=1/1</code> means to output <code>1</code> image every <code>1</code> second, <code>round=zero</code> rounds the timestamp to <code>0</code>. <code>start_time=0</code> starts capturing from <code>0</code> seconds.</li><li><code>scale=160x90</code> sets the output image resolution, and <code>tile=5x4</code> arranges the small images in a <code>5 x 4</code> grid.</li><li><code>t%d.jpg</code> specifies the file name, with <code>%d</code> indicating a numeric increment.</li></ul><p>After generating the images, you can configure them as follows:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...other configurations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  thumbnail: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    col: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    row: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    startSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gapSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    images: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;/thumbnails/t1.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Adjust the directory based on your placement</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Caution</p><p>If you pass an empty array to <code>thumbnail.images</code>, the small thumbnail frames will not display, so once you do pass it, please ensure the images are accessible.</p></div>`,28)]))}const u=a(l,[["render",h]]);export{m as __pageData,u as default};
