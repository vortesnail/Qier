import{_ as a,c as i,a2 as t,o as s}from"./chunks/framework.etYTtafL.js";const k=JSON.parse('{"title":"Properties","description":"","frontmatter":{},"headers":[],"relativePath":"api/properties.md","filePath":"en/api/properties.md","lastUpdated":1727107399000}'),l={name:"api/properties.md"};function o(n,e,h,r,d,p){return s(),i("div",null,e[0]||(e[0]=[t('<h1 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties {#properties}&quot;">​</a></h1><p>The created instance has many properties that can be read and written. You can log them in the console to inspect:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> player</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(player)</span></span></code></pre></div><h2 id="container-htmlelement" tabindex="-1"><code>container: HTMLElement</code> <a class="header-anchor" href="#container-htmlelement" aria-label="Permalink to &quot;`container: HTMLElement`&quot;">​</a></h2><p>The container element for the player (provided as the <code>container</code> parameter or passed in <code>mount()</code>).</p><h2 id="el-htmldivelement" tabindex="-1"><code>el: HTMLDivElement</code> <a class="header-anchor" href="#el-htmldivelement" aria-label="Permalink to &quot;`el: HTMLDivElement`&quot;">​</a></h2><p>The outermost element of the player, which has the class name <code>qier-player</code>.</p><h2 id="video-htmlvideoelement" tabindex="-1"><code>video: HTMLVideoElement</code> <a class="header-anchor" href="#video-htmlvideoelement" aria-label="Permalink to &quot;`video: HTMLVideoElement`&quot;">​</a></h2><p>The <code>video</code> tag element for the player.</p><h2 id="options-iplayeroptions" tabindex="-1"><code>options: IPlayerOptions</code> <a class="header-anchor" href="#options-iplayeroptions" aria-label="Permalink to &quot;`options: IPlayerOptions`&quot;">​</a></h2><p>An object that combines all the configuration options passed to the player with the default options.</p><h2 id="rect-rect" tabindex="-1"><code>rect: Rect</code> <a class="header-anchor" href="#rect-rect" aria-label="Permalink to &quot;`rect: Rect`&quot;">​</a></h2><p>Properties related to the player’s dimensions.</p><ul><li><code>rect.width</code>: The width of the player (read-only).</li><li><code>rect.height</code>: The height of the player (read-only).</li><li><code>rect.x</code>: The horizontal coordinate of the player (read-only).</li><li><code>rect.y</code>: The vertical coordinate of the player (read-only).</li><li><code>rect.update</code>: Method to update the player&#39;s dimensions.</li></ul><p>It&#39;s best to avoid calling <code>player.rect.update()</code> directly; instead, trigger the <code>UpdateSize</code> event using <code>player.emit(&#39;UpdateSize&#39;)</code>.</p><h2 id="poster-poster" tabindex="-1"><code>poster: Poster</code> <a class="header-anchor" href="#poster-poster" aria-label="Permalink to &quot;`poster: Poster`&quot;">​</a></h2><p>The player’s poster image.</p><ul><li><code>poster.el</code>: The outermost element for the poster.</li><li><code>poster.isActive</code>: Whether the poster is displayed (read-only).</li><li><code>poster.show</code>: Method to show the poster.</li><li><code>poster.hide</code>: Method to hide the poster.</li></ul><h2 id="loading-loading" tabindex="-1"><code>loading: Loading</code> <a class="header-anchor" href="#loading-loading" aria-label="Permalink to &quot;`loading: Loading`&quot;">​</a></h2><p>The loading indicator for the player.</p><ul><li><code>loading.el</code>: The outermost element for the loading indicator.</li><li><code>loading.isActive</code>: Whether the loading indicator is displayed (read-only).</li><li><code>loading.show</code>: Method to show the loading indicator.</li><li><code>loading.hide</code>: Method to hide the loading indicator.</li></ul><h2 id="webfullscreen-webfullscreen" tabindex="-1"><code>webFullscreen: WebFullscreen</code> <a class="header-anchor" href="#webfullscreen-webfullscreen" aria-label="Permalink to &quot;`webFullscreen: WebFullscreen`&quot;">​</a></h2><p>Web fullscreen functionality for the player.</p><ul><li><code>webFullscreen.isActive</code>: Whether the player is in web fullscreen mode (read-only).</li><li><code>webFullscreen.enter</code>: Method to enter web fullscreen mode.</li><li><code>webFullscreen.exit</code>: Method to exit web fullscreen mode.</li><li><code>webFullscreen.toggle</code>: Method to toggle web fullscreen mode.</li></ul><h2 id="fullscreen-fullscreen" tabindex="-1"><code>fullscreen: Fullscreen</code> <a class="header-anchor" href="#fullscreen-fullscreen" aria-label="Permalink to &quot;`fullscreen: Fullscreen`&quot;">​</a></h2><p>Fullscreen functionality for the player.</p><ul><li><code>fullscreen.isActive</code>: Whether the player is in fullscreen mode (read-only).</li><li><code>fullscreen.enter</code>: Method to enter fullscreen mode.</li><li><code>fullscreen.exit</code>: Method to exit fullscreen mode.</li><li><code>fullscreen.toggle</code>: Method to toggle fullscreen mode.</li><li><code>fullscreen.enableDblclick</code>: Enable double-click to enter fullscreen mode.</li><li><code>fullscreen.disableDblclick</code>: Disable double-click to enter fullscreen mode.</li></ul><h2 id="menu-menu" tabindex="-1"><code>menu: Menu</code> <a class="header-anchor" href="#menu-menu" aria-label="Permalink to &quot;`menu: Menu`&quot;">​</a></h2><p>The right-click context menu for the player.</p><ul><li><code>menu.el</code>: The outermost element for the right-click menu.</li><li><code>menu.isActive</code>: Whether the right-click menu is open (read-only).</li><li><code>menu.show</code>: Method to show the right-click menu.</li><li><code>menu.hide</code>: Method to hide the right-click menu.</li></ul><h2 id="toast-toast" tabindex="-1"><code>toast: Toast</code> <a class="header-anchor" href="#toast-toast" aria-label="Permalink to &quot;`toast: Toast`&quot;">​</a></h2><p>The toast notification for the player.</p><ul><li><code>toast.show</code>: Method to display a toast notification.</li><li><code>toast.close</code>: Method to close a toast notification.</li></ul><p>Usage:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(html: string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HTMLElement, position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Position, timeout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(toastItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ToastItem)</span></span></code></pre></div><p>Type signatures:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;center&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;left_top&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;right_top&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;left_bottom&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;right_bottom&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ToastItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  el</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTMLElement</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  dispose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="shortcut-shortcut" tabindex="-1"><code>shortcut: Shortcut</code> <a class="header-anchor" href="#shortcut-shortcut" aria-label="Permalink to &quot;`shortcut: Shortcut`&quot;">​</a></h2><p>Keyboard shortcut functionality for the player.</p><ul><li><code>shortcut.register</code>: Register a custom shortcut handler.</li><li><code>shortcut.unregister</code>: Unregister a custom shortcut handler.</li><li><code>shortcut.enable</code>: Enable shortcuts.</li><li><code>shortcut.disable</code>: Disable shortcuts.</li></ul><p>Usage:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(code: number, handler: ShortcutHandler)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregister</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(code: number)</span></span></code></pre></div><p>Type signatures:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ShortcutHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">player</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="controller-controller" tabindex="-1"><code>controller: Controller</code> <a class="header-anchor" href="#controller-controller" aria-label="Permalink to &quot;`controller: Controller`&quot;">​</a></h2><p>The player controller.</p><ul><li><code>controller.show</code>: Method to display the player controller.</li><li><code>controller.hide</code>: Method to hide the player controller.</li></ul><h2 id="settingitems-isettingitem" tabindex="-1"><code>settingItems: ISettingItem[]</code> <a class="header-anchor" href="#settingitems-isettingitem" aria-label="Permalink to &quot;`settingItems: ISettingItem[]`&quot;">​</a></h2><p>The settings menu items for the player; see <a href="./parameters#parameters-ISettingItem">ISettingItem</a> for details.</p><h2 id="currenttime-number" tabindex="-1"><code>currentTime: number</code> <a class="header-anchor" href="#currenttime-number" aria-label="Permalink to &quot;`currentTime: number`&quot;">​</a></h2><p>The current playback position, which can be both retrieved and set.</p><p>For example, to jump to the 8-second mark:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player.currentTime </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span></code></pre></div><h2 id="loaded-boolean" tabindex="-1"><code>loaded: boolean</code> <a class="header-anchor" href="#loaded-boolean" aria-label="Permalink to &quot;`loaded: boolean`&quot;">​</a></h2><p>Indicates whether the video has loaded successfully (read-only).</p><h2 id="duration-number" tabindex="-1"><code>duration: number</code> <a class="header-anchor" href="#duration-number" aria-label="Permalink to &quot;`duration: number`&quot;">​</a></h2><p>The total duration of the current video (read-only).</p><h2 id="buffered-timeranges" tabindex="-1"><code>buffered: TimeRanges</code> <a class="header-anchor" href="#buffered-timeranges" aria-label="Permalink to &quot;`buffered: TimeRanges`&quot;">​</a></h2><p>The ranges of the video that have been loaded (read-only). See <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered" target="_blank" rel="noreferrer">MDN buffered</a> for more information.</p><h2 id="paused-boolean" tabindex="-1"><code>paused: boolean</code> <a class="header-anchor" href="#paused-boolean" aria-label="Permalink to &quot;`paused: boolean`&quot;">​</a></h2><p>Indicates whether the video is currently paused (read-only).</p><h2 id="ended-boolean" tabindex="-1"><code>ended: boolean</code> <a class="header-anchor" href="#ended-boolean" aria-label="Permalink to &quot;`ended: boolean`&quot;">​</a></h2><p>Indicates whether the video has finished playing (read-only).</p><h2 id="playing-boolean" tabindex="-1"><code>playing: boolean</code> <a class="header-anchor" href="#playing-boolean" aria-label="Permalink to &quot;`playing: boolean`&quot;">​</a></h2><p>Indicates whether the video is currently playing (read-only).</p><h2 id="volume-number" tabindex="-1"><code>volume: number</code> <a class="header-anchor" href="#volume-number" aria-label="Permalink to &quot;`volume: number`&quot;">​</a></h2><p>The volume level of the video, which can be both retrieved and set. The range is from <code>0 to 1</code>.</p><p>For example, to set the volume to 90%:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player.volume </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span></span></code></pre></div><h2 id="muted-boolean" tabindex="-1"><code>muted: boolean</code> <a class="header-anchor" href="#muted-boolean" aria-label="Permalink to &quot;`muted: boolean`&quot;">​</a></h2><p>Indicates whether the video is muted, which can be both retrieved and set.</p><p>For example, to mute the video:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player.muted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><h2 id="loop-boolean" tabindex="-1"><code>loop: boolean</code> <a class="header-anchor" href="#loop-boolean" aria-label="Permalink to &quot;`loop: boolean`&quot;">​</a></h2><p>Indicates whether the video should loop, which can be both retrieved and set.</p><p>For example, to set the video to replay after it ends:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player.loop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><h2 id="playbackrate-number" tabindex="-1"><code>playbackRate: number</code> <a class="header-anchor" href="#playbackrate-number" aria-label="Permalink to &quot;`playbackRate: number`&quot;">​</a></h2><p>The playback speed of the video, which can be both retrieved and set.</p><p>For example, to set the playback speed to 2x:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">player.playbackRate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div>',81)]))}const u=a(l,[["render",o]]);export{k as __pageData,u as default};
