import{_ as e,c as i,a2 as t,o as s}from"./chunks/framework.etYTtafL.js";const u=JSON.parse('{"title":"方法","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/functions.md","filePath":"zh/api/functions.md","lastUpdated":1727107399000}'),a={name:"zh/api/functions.md"};function n(d,o,p,r,l,h){return s(),i("div",null,o[0]||(o[0]=[t('<h1 id="functions" tabindex="-1">方法 <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;方法 {#functions}&quot;">​</a></h1><p>创建的实例有许多方法可供掉用，你可以在控制台打印后查看：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> player</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(player)</span></span></code></pre></div><h2 id="mount-container-iplayeroptions-container-void" tabindex="-1"><code>mount(container?: IPlayerOptions[&#39;container&#39;]): void</code> <a class="header-anchor" href="#mount-container-iplayeroptions-container-void" aria-label="Permalink to &quot;`mount(container?: IPlayerOptions[&#39;container&#39;]): void`&quot;">​</a></h2><p>播放器挂载的容器，如果初始化时没有传入 <code>container</code> 参数，那么调用该函数时的参数为必传。</p><h2 id="play-promise-void-void" tabindex="-1"><code>play(): Promise&lt;void&gt; | void</code> <a class="header-anchor" href="#play-promise-void-void" aria-label="Permalink to &quot;`play(): Promise&lt;void&gt; | void`&quot;">​</a></h2><p>播放播放视频，调用的是 <code>video</code> 元素的原生事件。</p><h2 id="pause-void" tabindex="-1"><code>pause(): void</code> <a class="header-anchor" href="#pause-void" aria-label="Permalink to &quot;`pause(): void`&quot;">​</a></h2><p>暂停播放视频，调用的是 <code>video</code> 元素的原生事件。</p><h2 id="seek-seconds-number-void" tabindex="-1"><code>seek(seconds: number): void</code> <a class="header-anchor" href="#seek-seconds-number-void" aria-label="Permalink to &quot;`seek(seconds: number): void`&quot;">​</a></h2><p>跳转到播放的指定时间，和设置 <code>player.currentTime</code> 相同作用。</p><h2 id="incvolume-v-this-options-shortcutoptions-volumestep-void" tabindex="-1"><code>incVolume(v = this.options.shortcutOptions.volumeStep): void</code> <a class="header-anchor" href="#incvolume-v-this-options-shortcutoptions-volumestep-void" aria-label="Permalink to &quot;`incVolume(v = this.options.shortcutOptions.volumeStep): void`&quot;">​</a></h2><p>增加音量，步长为 <code>volumeStep</code> 设置的值。</p><h2 id="decvolume-v-this-options-shortcutoptions-volumestep-void" tabindex="-1"><code>decVolume(v = this.options.shortcutOptions.volumeStep): void</code> <a class="header-anchor" href="#decvolume-v-this-options-shortcutoptions-volumestep-void" aria-label="Permalink to &quot;`decVolume(v = this.options.shortcutOptions.volumeStep): void`&quot;">​</a></h2><p>降低音量，步长为 <code>volumeStep</code> 设置的值。</p><h2 id="forward-v-this-options-shortcutoptions-seekstep-void" tabindex="-1"><code>forward(v = this.options.shortcutOptions.seekStep): void</code> <a class="header-anchor" href="#forward-v-this-options-shortcutoptions-seekstep-void" aria-label="Permalink to &quot;`forward(v = this.options.shortcutOptions.seekStep): void`&quot;">​</a></h2><p>快进，步长为 <code>seekStep</code> 设置的值。</p><h2 id="rewind-v-this-options-shortcutoptions-seekstep-void" tabindex="-1"><code>rewind(v = this.options.shortcutOptions.seekStep): void</code> <a class="header-anchor" href="#rewind-v-this-options-shortcutoptions-seekstep-void" aria-label="Permalink to &quot;`rewind(v = this.options.shortcutOptions.seekStep): void`&quot;">​</a></h2><p>快退，步长为 <code>seekStep</code> 设置的值。</p><h2 id="toggle-void" tabindex="-1"><code>toggle(): void</code> <a class="header-anchor" href="#toggle-void" aria-label="Permalink to &quot;`toggle(): void`&quot;">​</a></h2><p>播放或暂停视频。</p><h2 id="togglevolume-void" tabindex="-1"><code>toggleVolume(): void</code> <a class="header-anchor" href="#togglevolume-void" aria-label="Permalink to &quot;`toggleVolume(): void`&quot;">​</a></h2><p>切换静音状态。</p><h2 id="dispose-void" tabindex="-1"><code>dispose(): void</code> <a class="header-anchor" href="#dispose-void" aria-label="Permalink to &quot;`dispose(): void`&quot;">​</a></h2><p>销毁播放器。</p>',25)]))}const v=e(a,[["render",n]]);export{u as __pageData,v as default};
