import{_ as i}from"./chunks/t1.D91W1I_Q.js";import{_ as a,c as t,a2 as n,o as e}from"./chunks/framework.etYTtafL.js";const E=JSON.parse('{"title":"视频缩略图","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/thumbnail.md","filePath":"zh/guide/thumbnail.md","lastUpdated":1727107399000}'),p={name:"zh/guide/thumbnail.md"};function l(h,s,k,d,r,c){return e(),t("div",null,s[0]||(s[0]=[n(`<h1 id="thumbnail" tabindex="-1">视频缩略图 <a class="header-anchor" href="#thumbnail" aria-label="Permalink to &quot;视频缩略图 {#thumbnail}&quot;">​</a></h1><p>现在主流的视频网站都支持一个功能，即光标移动到视频进度条某个位置时，会显示该处的视频内容缩略图，这有益于用户快速定位想要看到的内容时间点，QierPlayer 同样支持这个配置。</p><p>QierPlayer 的缩略图使用 <code>thumbnail</code> 参数配置，结构如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IThumbnail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  startSecond</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  gapSecond</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  row</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  col</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  images</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>默认值如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultOpts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IThumbnail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  startSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gapSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  col: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  row: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  images: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>接下来会教你如何理解上述的配置，并进行实战。</p><h2 id="principle" tabindex="-1">原理 <a class="header-anchor" href="#principle" aria-label="Permalink to &quot;原理 {#principle}&quot;">​</a></h2><p>在前端关于图片性能优化中，我们通常会使用<strong>雪碧图</strong>来对多个图片进行合并优化，以减少 http 请求连接量，而我们视频的缩略图相当于是提取了视频中的很多帧，将这些帧合并成一个一个的雪碧图。</p><p>再根据光标所在的时间计算出要展示当前雪碧图中的哪个位置的图（CSS 的背景定位），而上述的配置就是一些位置及单帧图片大小的信息。</p><p>我们看下图：</p><img src="`+i+`"><p>我们可以看到这个雪碧图由 <code>5 x 4</code> 的小缩略图组成，一个视频可能有多张雪碧图。</p><table tabindex="0"><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>startSecond</td><td>缩略图制作的开始时间，比如缩略图是视频的第 <code>0</code> 秒开始制作的那么，这里就是 <code>0</code></td></tr><tr><td>gapSecond</td><td>一张小缩略图时间跨度，如果小缩略图是每 <code>1</code> 秒截一张，那么这里就填 <code>1</code></td></tr><tr><td>col</td><td>雪碧图的列数</td></tr><tr><td>row</td><td>雪碧图的行数</td></tr><tr><td>width</td><td>小缩略图的宽</td></tr><tr><td>height</td><td>小缩略图的高</td></tr><tr><td>images</td><td>雪碧图的链接地址数组</td></tr></tbody></table><h2 id="make-thumbnails" tabindex="-1">制作缩略图 <a class="header-anchor" href="#make-thumbnails" aria-label="Permalink to &quot;制作缩略图 {#make-thumbnails}&quot;">​</a></h2><p>一般来说，用户上传视频至服务端之后，缩略图的制作是服务端进行的，比如 Java 你可以使用 <a href="https://www.ffmpeg.org/" target="_blank" rel="noreferrer">FFmpeg</a> 或 <a href="https://github.com/bytedeco/javacv" target="_blank" rel="noreferrer">JavaCV</a>，如果是 Node 你可以使用 <a href="https://github.com/fluent-ffmpeg/node-fluent-ffmpeg" target="_blank" rel="noreferrer">Fluent ffmpeg</a>。</p><p>为了方便，在此介绍使用 FFmpeg 的命令行来制作视频缩略图。</p><div class="tip custom-block"><p class="custom-block-title">强大的音视频处理工具</p><p>FFmpeg 是一个开源的跨平台音视频处理工具，可以用来对音频和视频进行录制、转换、编辑等多种操作。它支持几乎所有常见的音频和视频格式，可以进行音频、视频的编解码、封装、解封装等操作，还可以进行视频剪辑、合并、压缩、转码、提取音频等高级操作。</p><p>总之 FFmpeg 是一个功能丰富、强大而灵活的音视频处理工具，许多播放器都将其作为内核。</p></div><p>首先去 <a href="https://www.ffmpeg.org/download.html" target="_blank" rel="noreferrer">FFmpeg 官网</a>下载安装，记得选对系统，比如我的是 macOS 就要选 macOS，下载完成后是一个命令行工具（你也可以用过 <code>brew install ffmepg</code> 快速安装），我们打开它即可。</p><p>然后在终端执行以下命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./test-video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;fps=1/1:round=zero:start_time=0,scale=160x90,tile=5x4&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> t%d.jpg</span></span></code></pre></div><p>通过上面这个命令生成了一张 <code>5 x 4</code> 的雪碧图，小缩略图的尺寸是 <code>160 x 90</code>。雪碧图的文件名是 <code>t1.jpg</code>。</p><div class="warning custom-block"><p class="custom-block-title">疑问</p><p>演示的视频只有 <code>17</code> 秒，如果 <code>1</code> 秒生成 <code>1</code> 张雪碧图，而雪碧图的规格为 <code>5</code> 列 <code>4</code> 行，所以只会生成一张 <code>t1.jpg</code>，如果视频足够长，将会生成多张雪碧图 <code>t1.jpg、t2.jpg、t3.jpg、t4.jpg...</code></p></div><p>解释上面命令的参数：</p><ul><li><code>-i</code> 参数后面是视频文件。</li><li><code>-vf</code> 参数后面跟着过滤器，多个过滤器用 <code>,</code> 分开，一个过滤器多个参数使用 <code>:</code> 分开。</li><li><code>fps=1/1</code> 表示每 <code>1</code> 秒输出 <code>1</code> 张图片，<code>round=zero</code> 为时间戳向 <code>0</code> 取整。 <code>start_time=0</code> 是让它从第 <code>0</code> 秒开始截取。</li><li><code>scale=160x90</code> 设置输出图像分辨率大小，<code>tile=5x4</code> 将小图用 <code>5 x 4</code> 的方式组合在一起。</li><li><code>t%d.jpg</code> 就是文件名，%d 表示按数字递增。</li></ul><p>图片生成后，配置如下就可以：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Player</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...其他配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  thumbnail: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    col: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    row: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    startSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gapSecond: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    images: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;/thumbnails/t1.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 目录根据自己放的位置来重写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">警示</p><p>如果你传入的 <code>thumbnail.images</code> 配置时空数组，将不会展示小缩略图的框，所以一旦传入，请务必保证图是可访问的。</p></div>`,28)]))}const y=a(p,[["render",l]]);export{E as __pageData,y as default};
